#server:
#  ssl:
#    enabled: false
#    key-store: ${KEY_STORE:ENC(R+cuGQ7VPVHzcN0JScSgzPZQls/en958MonvIt5/Wgk=)}
#    key-store-password: ${KEY_STORE_PASSWORD:ENC(3apBWD+AHiAhdGlL0lWW1A==)}
#    key-password: ${KEY_PASSWORD:ENC(XT9OuqUWfyWrRrlKeTm0pw==)}
#    key-alias: ${KEY_ALIAS:ENC(03ZDyJ0w9tlQFsWz54rfpBYsmxZ1AZxf)}

spring:
  datasource:
    master:
      hikari:
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: ${MYSQL_USERNAME:root}
        password: ${MYSQL_PASSWORD:password}
        jdbc-url: jdbc:mysql://${MYSQL_HOST:localhost}:3306/${MYSQL_DATABASE:come-us}?rewriteBatchedStatements=true
    slave:
      hikari:
        driver-class-name: com.mysql.cj.jdbc.Driver
        username: ${MYSQL_USERNAME:root}
        password: ${MYSQL_PASSWORD:password}
        jdbc-url: jdbc:mysql://${MYSQL_HOST:localhost}:3307/${MYSQL_DATABASE:come-us}
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/local/migration, classpath:db/local/seed
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: kakao
            client-id: ${OAUTH_K_CLIENT_ID:ENC(Jmm4ie+AOz/0svNTgosqrnOdG6YDw+OZOwk7KWUP9FEtb5OAcBLdJ3/ylwx+VB9C)}
            client-secret: ${OAUTH_K_CLIENT_SECRET:ENC(cag51Kkfkm9qfT3VXQa4KYb18t6fhtwlUiJ8uaA6EK9ejQeBcOcwBt6OtqH0nt1p)}
            scope: ${OAUTH_K_SCOPE:ENC(PsfJpQjmGnvIxNc3e1xm4mG3dVRRCVyjVkmTgqbe/CFDe8LpvsS9Iw==)}
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
          google:
            clientName: google
            client-id: ${OAUTH_G_CLIENT_ID:ENC(OlZ/Is3+3/d8aXfTRM5QYnpb+yd0823hnXmHuCEC+6FZ6/1+w2nzA5N85A31anQHpW+PV7T3V+fmYuaMgLn0X0GDr6CLIybO9rh+kTNcwJeTzzZ7zu80Qg==)}
            client-secret: ${OAUTH_G_CLIENT_SECRET:ENC(aSrh5NznQMNcb6bhuoPmf+cmHVnUWAHSpQ3Ej3zQs7OGEN+S+QHeuFtslt6gjr6K)}
            scope: ${OAUTH_G_SCOPE:ENC(8PN/+m11hRReX5PlOYATVqsUslgXgkiI)}
            redirect-uri: "http://localhost:8080/login/oauth2/code/{registrationId}"
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
  redis:
    cluster:
      nodes:
        - ${REDIS_HOST1:localhost}:6379
        - ${REDIS_HOST2:localhost}:6380
        - ${REDIS_HOST3:localhost}:6381

jwt:
  issuer: come-us
  access-token:
    header: access-token
    expiry-seconds: ${ACCESS_EXPIRY_SECOND:ENC(KAmSYIJu+wv77mlzCEYZUA==)}
  refresh-token:
    header: refresh-token
    expiry-seconds: ${REFRESH_EXPIRY_SECOND:ENC(81ub4tNEuQbSiH6p0nGJig==)}
  secret-key: ${SECRET_KEY:ENC(LX22l9rNrrEg+imiadW9mw==)}

security:
  url-pattern-config:
    ignoring:
      GET:
        - /v3/api-docs/**
        - /swagger-ui/**
        - /swagger-ui.html/**
        - /health
        - /api/products/category/**
        - /api/products/*
        - /api/reviews/*
        - /api/rankings/*
        - /test/**
        - /actuator/**
        - /thumbnail/*
      POST:
        - /api/auth/login
        - /api/users
        - /test/**
      PATCH:
        - /test/**
      PUT:
        - /test/**
      DELETE:
        - /test/**
    permit-all:
      GET: [ ]
      POST: [ ]
      PATCH: [ ]
      PUT: [ ]
      DELETE: [ ]
      OPTIONS: /**

cookie:
  secure: ${COOKIE_SECURE:false}
  same-site: ${COOKIE_SAME_SITE:lax}
  domain: ${DOMAIN:localhost}

cloud:
  aws:
    credentials:
      accessKey: ${AWS_ACCESS_KEY:test}
      secretKey: ${AWS_SECRET_KEY:test}
    s3:
      bucket: ${S3_BUCKET:come-us-local}
      suffix-url: ${S3_SUFFIX_URL:https://come-us-local.s3.ap-northeast-2.amazonaws.com/}
      endpoint: ${AWS_ENDPOINT:http://127.0.0.1}:4566
    stack:
      auto: false
    region:
      static: ${STATIC_REGION:ap-northeast-2}

encryptor:
  key: ${ENCRYPTOR_KEY:come-us}

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace